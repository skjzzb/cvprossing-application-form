logging.level.org.springframework = debug

# Database
#spring.datasource.driver = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/file
#spring.datasource.username = admin
#spring.datasource.password = Admin@123
#spring.datasource.driverClassName=com.mysql.jdbc.Driver

spring.datasource.driver= = org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://ec2-54-146-91-153.compute-1.amazonaws.com:5432/d465pgb6rtv076
spring.datasource.username = hscifmzkzveolj
spring.datasource.password = 512d4a4f50877860a689a9ab3d4ef2c92c964c45d4725ee8a0bd6cf6bd28b955
spring.datasource.driverClassName=org.postgresql.Driver

# Database
#spring.datasource.driver= = org.postgresql.Driver
#spring.datasource.url = jdbc:postgresql://localhost:5432/testDB
#spring.datasource.username = admin
#spring.datasource.password = admin@123
#spring.datasource.driverClassName=org.postgresql.Driver

#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto = update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#DB config
spring.jpa.database=POSTGRESQL
spring.jpa.generate-ddl=true
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


#Email
#spring.mail.host: smtp.gmail.com
#spring.mail.port: 587
#spring.mail.username: xxx@gmail.com
#spring.mail.password: xxx
#spring.mail.properties.mail.smtp.auth: true
#spring.mail.properties.mail.smtp.starttls.enable: true
#spring.mail.properties.mail.smtp.starttls.required: true
#spring.mail.properties.mail.smtp.ssl.enable = true
#spring.mail.test-connection=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=uploadFiles

//google
#google.secret.key.path=classpath:keys/client_secret_2.json
google.secret.key.path=classpath:keys/client_secret_2.json
google.oauth.callback.uri=http://localhost:8080/oauth
google.credentials.folder.path=classpath:credentials
#google.credentials.folder.path=classpath:credentials
google.service.account.key=classpath:secret/service.json
google.drive.parentfolder.id=18Sx_VYSBhti-_0zYntTwU33Sk0eRKo9x
google.drive.parentfolder.images.id = 1-bBAfL8ap3f8KQ1ufljTYhHoBkahx-ac




